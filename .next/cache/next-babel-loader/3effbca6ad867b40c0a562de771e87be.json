{"ast":null,"code":"var _jsxFileName = \"F:\\\\next\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { decrementCounter, incrementCounter, changeName } from '../redux/actions/counterActions';\n\nclass App extends React.Component {\n  static getInitialProps({\n    store\n  }) {}\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"changeNameTalha\", () => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch();\n      console.log('it is testing');\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: this.props.incrementCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Increment\"), __jsx(\"button\", {\n      onClick: this.props.decrementCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Decrement\"), __jsx(\"button\", {\n      onClick: this.props.changeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Change Name\"), __jsx(\"button\", {\n      onClick: this.changeNameTalha,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Test\"), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.props.counter), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.name));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  counter: state.counter.value,\n  name: state.counter.name\n});\n\nconst mapDispatchToProps = {\n  incrementCounter: incrementCounter,\n  decrementCounter: decrementCounter,\n  changeName: changeName\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["F:/next/pages/index.js"],"names":["React","connect","decrementCounter","incrementCounter","changeName","App","Component","getInitialProps","store","constructor","props","dispatch","console","log","render","changeNameTalha","counter","name","mapStateToProps","state","value","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,EAA0BC,gBAA1B,EAA2CC,UAA3C,QAA4D,iCAA5D;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAE9B,SAAOC,eAAP,CAAuB;AAACC,IAAAA;AAAD,GAAvB,EAAgC,CAAE;;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,6CAID,MAAI;AAClB,YAAO;AAACC,QAAAA;AAAD,UAAa,KAAKD,KAAzB;AACAC,MAAAA,QAAQ;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KARkB;AAElB;;AAQDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWP,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKO,KAAL,CAAWR,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWN,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,KAAKW,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKL,KAAL,CAAWM,OAAhB,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,KAAL,CAAWO,IAAhB,CANJ,CADJ;AAUH;;AAzB6B;;AA4BlC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcI,KADO;AAE9BH,EAAAA,IAAI,EAACE,KAAK,CAACH,OAAN,CAAcC;AAFW,CAAL,CAA7B;;AAKA,MAAMI,kBAAkB,GAAG;AACvBlB,EAAAA,gBAAgB,EAAEA,gBADK;AAEvBD,EAAAA,gBAAgB,EAAEA,gBAFK;AAGvBE,EAAAA,UAAU,EAACA;AAHY,CAA3B;AAMA,eAAeH,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,GAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {decrementCounter, incrementCounter,changeName} from '../redux/actions/counterActions';\r\n\r\nclass App extends React.Component {\r\n\r\n    static getInitialProps({store}) {}\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    changeNameTalha = ()=>{\r\n        const  {dispatch} = this.props\r\n        dispatch()\r\n        console.log('it is testing')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.props.incrementCounter}>Increment</button>\r\n                <button onClick={this.props.decrementCounter}>Decrement</button>\r\n                <button onClick={this.props.changeName}>Change Name</button>\r\n                <button onClick={this.changeNameTalha}>Test</button>\r\n                <h1>{this.props.counter}</h1>\r\n                <h1>{this.props.name}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    counter: state.counter.value,\r\n    name:state.counter.name\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    incrementCounter: incrementCounter,\r\n    decrementCounter: decrementCounter,\r\n    changeName:changeName\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}