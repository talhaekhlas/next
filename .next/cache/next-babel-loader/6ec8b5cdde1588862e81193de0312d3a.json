{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { DECREMENT_COUNTER, INCREMENT_COUNTER, CHANGE_NAME, TEST } from '../actions/counterActions';\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    value: 0,\n    name: 'Talha',\n    data: null\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value + 1\n      });\n\n    case DECREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value - 1\n      });\n\n    case CHANGE_NAME:\n      if (state.name === 'talha') {\n        return _objectSpread({}, state, {\n          name: 'shabu'\n        });\n      } else {\n        return _objectSpread({}, state, {\n          name: 'talha'\n        });\n      }\n\n    case TEST:\n      return _Object$assign({}, state, {\n        data: action.payload\n      });\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["F:/next/redux/reducers/counterReducer.js"],"names":["DECREMENT_COUNTER","INCREMENT_COUNTER","CHANGE_NAME","TEST","counterReducer","state","value","name","data","action","type","payload"],"mappings":";;;;;;;;;;;;;AAAA,SAAQA,iBAAR,EAA2BC,iBAA3B,EAA6CC,WAA7C,EAAyDC,IAAzD,QAAoE,2BAApE;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAuD;AAAA,MAAtDC,KAAsD,uEAA9C;AAACC,IAAAA,KAAK,EAAE,CAAR;AAAUC,IAAAA,IAAI,EAAC,OAAf;AAAuBC,IAAAA,IAAI,EAAC;AAA5B,GAA8C;AAAA,MAAXC,MAAW;;AAC1E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,iBAAL;AACI,+BAAWI,KAAX;AAAkBC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAAvC;;AACJ,SAAKN,iBAAL;AACI,+BAAWK,KAAX;AAAkBC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAAvC;;AACJ,SAAKJ,WAAL;AACI,UAAGG,KAAK,CAACE,IAAN,KAAe,OAAlB,EAA0B;AACtB,iCAAWF,KAAX;AAAkBE,UAAAA,IAAI,EAAE;AAAxB;AACH,OAFD,MAEK;AACD,iCAAWF,KAAX;AAAkBE,UAAAA,IAAI,EAAE;AAAxB;AACH;;AAEL,SAAKJ,IAAL;AACI,aAAO,eAAe,EAAf,EAAmBE,KAAnB,EAA0B;AAC7BG,QAAAA,IAAI,EAAEC,MAAM,CAACE;AADgB,OAA1B,CAAP;AAGA,+BAAWN,KAAX;AAAkBG,QAAAA,IAAI,EAAEC,MAAM,CAACE;AAA/B;;AAEJ;AACI,+BAAWN,KAAX;AAnBR;AAqBH,CAtBD;;AAwBA,eAAeD,cAAf","sourcesContent":["import {DECREMENT_COUNTER, INCREMENT_COUNTER,CHANGE_NAME,TEST} from '../actions/counterActions';\r\n\r\nconst counterReducer = (state = {value: 0,name:'Talha',data:null}, action) => {\r\n    switch (action.type) {\r\n        case INCREMENT_COUNTER:\r\n            return {...state, value: state.value + 1};\r\n        case DECREMENT_COUNTER:\r\n            return {...state, value: state.value - 1};\r\n        case CHANGE_NAME:\r\n            if(state.name === 'talha'){\r\n                return {...state, name: 'shabu'};\r\n            }else{\r\n                return {...state, name: 'talha'};\r\n            }\r\n\r\n        case TEST:\r\n            return Object.assign( {}, state, {\r\n                data: action.payload\r\n            })\r\n            return {...state, data: action.payload};\r\n        \r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default counterReducer;"]},"metadata":{},"sourceType":"module"}